doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    meta(name='description', content='')
    meta(name='author', content='')
    title Register
    link(href='css/styles.css', rel='stylesheet')
    link(href='plugins/toastr/css/toastr.min.css', rel='stylesheet')
    script(src='font-awesome.min.js', crossorigin='anonymous')
    script(src='https://www.gstatic.com/firebasejs/7.14.1/firebase-app.js', defer='')
    script(src='https://www.gstatic.com/firebasejs/7.14.1/firebase-auth.js', defer='')
    script(src='https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js', defer='')
  body.bg-primary
    nav.sb-topnav.navbar.navbar-expand.navbar-dark.bg-dark
        a.navbar-brand.ps-3(href='') To Do App
    #layoutAuthentication
      #layoutAuthentication_content
        main
          .container
            .row.justify-content-center
              .col-lg-7
                .card.shadow-lg.border-0.rounded-lg.mt-5
                  .card-header
                    h3.text-center.font-weight-light.my-4 Create Account
                  .card-body
                    form#signup
                        .form-floating.mb-3
                            input#login.form-control(type='email', placeholder='name@example.com')
                            label(for='login') Email address
                        .row.mb-3
                            .col-md-12
                                .form-floating.mb-3.mb-md-0
                                    input#password.form-control(type='password', placeholder='Create a password')
                                    label(for='password') Password
                        .row.mb-3
                            .col-6
                                .form-check
                                    label.form-check-label Admin
                                        input.form-check-input(type='radio' name='usertype' value='admin' checked)
                            .col-6
                                .form-check
                                    label.form-check-label User
                                        input.form-check-input(type='radio' name='usertype' value='user')
                        .mt-4.mb-0
                            .d-grid
                                button.btn.btn-primary.btn-block Create Account
                  .card-footer.text-center.py-3
                    .small
                      a(href='/login') Have an account? Go to login
      include ./layout/ads.pug
    include ./layout/footer.pug
    script(src="https://code.jquery.com/jquery-3.4.1.min.js")
    script(src='bootstrap.bundle.min.js', crossorigin='anonymous')
    script(src='plugins/toastr/js/toastr.min.js', rel='stylesheet')
    script(src='js/scripts.js')
    script.
        const toastConfig = {
            positionClass: "toast-top-right",
            timeOut: 2000,
            closeButton: !0,
            debug: !1,
            newestOnTop: !0,
            progressBar: !0,
            preventDuplicates: !0,
            onclick: null,
            showDuration: "300",
            hideDuration: "1000",
            extendedTimeOut: "1000",
            showEasing: "swing",
            hideEasing: "linear",
            showMethod: "fadeIn",
            hideMethod: "fadeOut",
            tapToDismiss: !1
        };
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
        window.addEventListener("DOMContentLoaded", () => {
            const firebaseConfig = {
                apiKey: "***********************************",
                authDomain: "***********************************",
                projectId: "***********************************",
                storageBucket: "***********************************",
                messagingSenderId: "***********************************",
                appId: "***********************************",
                measurementId: "***********************************"
            };
            firebase.initializeApp(firebaseConfig);
            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);
            document
                .getElementById("signup")
                .addEventListener("submit", (event) => {
                    event.preventDefault();
                    const usertype = event.target.usertype.value;
                    const login = event.target.login.value;
                    const password = event.target.password.value;
                    firebase
                        .auth()
                        .createUserWithEmailAndPassword(login, password)
                        .then(async ({ user }) => {
                            user.sendEmailVerification();
                            return user.getIdToken().then((idToken) => {
                                return fetch("/sessionSignup", {
                                    method: "POST",
                                    headers: {
                                    Accept: "application/json",
                                        "Content-Type": "application/json",
                                        "CSRF-Token": Cookies.get("XSRF-TOKEN"),
                                    },
                                    body: JSON.stringify({ idToken, usertype, uid: user.uid, email: login }),
                                });
                            });
                        })
                        .catch((error) => {
                            const errorCode = error.code;
                            const errorMessage = error.message;
                            
                            let msg = '';
                            if (errorCode === 'auth/email-already-in-use') {
                                msg = 'The email address is already in use by another account!';
                            } else if (errorCode === 'auth/weak-password') {
                                msg = 'Password should be at least 6 characters';
                            }
                            toastr.error("", msg, toastConfig);
                            return Promise.reject(error);
                        })
                        .then(async () => {
                            firebase.auth().signOut();
                            toastr.info("", 'Verification link sent to your mail!', toastConfig);
                            await sleep(2000);
                            window.location.assign("/login");
                        });
                    return false;
                });
            });