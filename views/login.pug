doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    meta(name='description', content='')
    meta(name='author', content='')
    title Login
    link(href='css/styles.css', rel='stylesheet')
    link(href='plugins/toastr/css/toastr.min.css', rel='stylesheet')
    script(src='font-awesome.min.js', crossorigin='anonymous')
    script(src='https://www.gstatic.com/firebasejs/7.14.1/firebase-app.js', defer='')
    script(src='https://www.gstatic.com/firebasejs/7.14.1/firebase-auth.js', defer='')
    script(src='https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js', defer='')
  body.bg-primary
    #layoutAuthentication
      #layoutAuthentication_content
        main
          .container
            .row.justify-content-center
              .col-lg-5
                .card.shadow-lg.border-0.rounded-lg.mt-5
                  .card-header
                    h3.text-center.font-weight-light.my-4 Login
                  .card-body
                    form#loginform
                      .form-floating.mb-3
                        input#login.form-control(type='email', placeholder='name@example.com')
                        label(for='login') Email address
                      .form-floating.mb-3
                        input#password.form-control(type='password', placeholder='Password')
                        label(for='password') Password
                      .d-flex.align-items-center.justify-content-between.mt-4.mb-0
                        a.small(href='/forgot-password') Forgot Password?
                        button.btn.btn-primary Login
                  .card-footer.text-center.py-3
                    .small
                      a(href='/signup') Need an account? Sign up!
      include ./layout/ads.pug
    include ./layout/footer.pug
    script(src="https://code.jquery.com/jquery-3.4.1.min.js")
    script(src='bootstrap.bundle.min.js', crossorigin='anonymous')
    script(src='plugins/toastr/js/toastr.min.js', rel='stylesheet')
    script(src='js/scripts.js')
    script.
      const toastConfig = {
        positionClass: "toast-top-right",
        timeOut: 2000,
        closeButton: !0,
        debug: !1,
        newestOnTop: !0,
        progressBar: !0,
        preventDuplicates: !0,
        onclick: null,
        showDuration: "300",
        hideDuration: "1000",
        extendedTimeOut: "1000",
        showEasing: "swing",
        hideEasing: "linear",
        showMethod: "fadeIn",
        hideMethod: "fadeOut",
        tapToDismiss: !1
      };
      window.addEventListener("DOMContentLoaded", () => {
        const firebaseConfig = {
          apiKey: "AIzaSyA5O9xBUG1e8BSHBRnJ5S7eJYcCj7EjVHE",
          authDomain: "teachery-6b46e.firebaseapp.com",
          projectId: "teachery-6b46e",
          storageBucket: "teachery-6b46e.appspot.com",
          messagingSenderId: "970997936850",
          appId: "1:970997936850:web:96ed2d92e37059e2e9330b",
          measurementId: "G-J4H8R0D53F"
        };
        firebase.initializeApp(firebaseConfig);
        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);
        document
          .getElementById("loginform")
          .addEventListener("submit", (event) => {
              event.preventDefault();
              const login = event.target.login.value;
              const password = event.target.password.value;
              firebase
                  .auth()
                  .signInWithEmailAndPassword(login, password)
                  .then(({ user }) => {
                    if (user.emailVerified) {
                      return user.getIdToken().then((idToken) => {
                          return fetch("/sessionLogin", {
                              method: "POST",
                              headers: {
                                  Accept: "application/json",
                                  "Content-Type": "application/json",
                                  "CSRF-Token": Cookies.get("XSRF-TOKEN"),
                              },
                              body: JSON.stringify({ idToken }),
                          });
                      });
                    } else {
                      toastr.error("", "Please verify your email!", toastConfig);
                      return Promise.reject(error);
                    }

                  })
                  .catch((error) => {
                    const errorCode = error.code;
                    const errorMessage = error.message;
                  
                    toastr.error("", "Wrong Email or Password!", toastConfig);

                    return Promise.reject(error);
                  })
                  .then(() => {
                    return firebase.auth().signOut();
                  })
                  .then(() => {
                    window.location.assign("/doLogin");
                  });
              return false;
          });
      });